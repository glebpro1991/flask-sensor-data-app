"""empty message

Revision ID: 30b13ac296e8
Revises: deebcddb82e5
Create Date: 2019-02-06 09:23:48.325770

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '30b13ac296e8'
down_revision = 'deebcddb82e5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('sym_idx_nd_hst_job', table_name='sym_node_host_job_stats')
    op.drop_table('sym_node_host_job_stats')
    op.drop_table('sym_file_trigger')
    op.drop_index('sym_idx_trigg_hist_1', table_name='sym_trigger_hist')
    op.drop_table('sym_trigger_hist')
    op.drop_index('sym_idx_nd_hst_sts', table_name='sym_node_host_stats')
    op.drop_table('sym_node_host_stats')
    op.drop_table('sym_grouplet')
    op.drop_table('sym_node')
    op.drop_table('sym_node_group_link')
    op.drop_table('sym_node_group_channel_wnd')
    op.drop_table('sym_extract_request')
    op.drop_table('sym_channel')
    op.drop_table('sym_trigger')
    op.drop_table('sym_load_filter')
    op.drop_table('sym_trigger_router_grouplet')
    op.drop_index('sym_idx_reg_req_1', table_name='sym_registration_request')
    op.drop_index('sym_idx_reg_req_2', table_name='sym_registration_request')
    op.drop_table('sym_registration_request')
    op.drop_table('sym_file_incoming')
    op.drop_table('sym_transform_column')
    op.drop_table('sym_node_security')
    op.drop_table('sym_node_channel_ctl')
    op.drop_index('sym_idx_nd_hst_chnl_sts', table_name='sym_node_host_channel_stats')
    op.drop_table('sym_node_host_channel_stats')
    op.drop_index('sym_idx_dg_status', table_name='sym_data_gap')
    op.drop_table('sym_data_gap')
    op.drop_table('sym_router')
    op.drop_table('sym_node_identity')
    op.drop_table('sym_grouplet_link')
    op.drop_table('sym_context')
    op.drop_table('sym_registration_redirect')
    op.drop_table('sym_conflict')
    op.drop_table('sym_extension')
    op.drop_table('sym_notification')
    op.drop_table('sym_sequence')
    op.drop_index('sym_idx_f_snpsht_chid', table_name='sym_file_snapshot')
    op.drop_table('sym_file_snapshot')
    op.drop_table('sym_monitor_event')
    op.drop_index('sym_idx_de_batchid', table_name='sym_data_event')
    op.drop_table('sym_data_event')
    op.drop_table('sym_transform_table')
    op.drop_table('sym_node_host')
    op.drop_table('sym_node_group')
    op.drop_table('sym_job')
    op.drop_table('sym_table_reload_request')
    op.drop_table('sym_incoming_error')
    op.drop_index('sym_idx_ob_in_error', table_name='sym_outgoing_batch')
    op.drop_index('sym_idx_ob_node_status', table_name='sym_outgoing_batch')
    op.drop_index('sym_idx_ob_status', table_name='sym_outgoing_batch')
    op.drop_table('sym_outgoing_batch')
    op.drop_table('sym_file_trigger_router')
    op.drop_table('sym_trigger_router')
    op.drop_table('sym_node_communication')
    op.drop_index('sym_idx_d_channel_id', table_name='sym_data')
    op.drop_table('sym_data')
    op.drop_table('sym_monitor')
    op.drop_index('sym_idx_ib_in_error', table_name='sym_incoming_batch')
    op.drop_index('sym_idx_ib_time_status', table_name='sym_incoming_batch')
    op.drop_table('sym_incoming_batch')
    op.drop_table('sym_lock')
    op.drop_table('sym_parameter')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sym_parameter',
    sa.Column('external_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('param_key', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('param_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('external_id', 'node_group_id', 'param_key', name='sym_parameter_pkey')
    )
    op.create_table('sym_lock',
    sa.Column('lock_action', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('lock_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('locking_server_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lock_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('shared_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('shared_enable', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('last_lock_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_locking_server_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('lock_action', name='sym_lock_pkey')
    )
    op.create_table('sym_incoming_batch',
    sa.Column('batch_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('status', sa.CHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('error_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('sql_state', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('sql_code', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('sql_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_update_hostname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ignore_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('byte_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('extract_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('sent_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('reload_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('other_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_insert_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_update_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_delete_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_insert_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_update_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_delete_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_insert_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_update_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_delete_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('network_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('filter_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('router_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('transform_extract_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('transform_load_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('common_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('fallback_insert_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('fallback_update_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('ignore_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('missing_delete_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('skip_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('failed_row_number', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('failed_line_number', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('failed_data_id', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('batch_id', 'node_id', name='sym_incoming_batch_pkey')
    )
    op.create_index('sym_idx_ib_time_status', 'sym_incoming_batch', ['create_time', 'status'], unique=False)
    op.create_index('sym_idx_ib_in_error', 'sym_incoming_batch', ['error_flag'], unique=False)
    op.create_table('sym_monitor',
    sa.Column('monitor_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('node_group_id', sa.VARCHAR(length=50), server_default=sa.text("'ALL'::character varying"), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=255), server_default=sa.text("'ALL'::character varying"), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('threshold', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('run_period', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('run_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('severity_level', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('monitor_id', name='sym_monitor_pkey')
    )
    op.create_table('sym_data',
    sa.Column('data_id', sa.BIGINT(), server_default=sa.text("nextval('sym_data_data_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.CHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('row_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pk_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('old_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('trigger_hist_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('source_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('external_data', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('node_list', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('data_id', name='sym_data_pkey')
    )
    op.create_index('sym_idx_d_channel_id', 'sym_data', ['data_id', 'channel_id'], unique=False)
    op.create_table('sym_node_communication',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('queue', sa.VARCHAR(length=25), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=False),
    sa.Column('communication_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('lock_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('locking_server_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_lock_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_lock_millis', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('success_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('fail_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('skip_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_success_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_fail_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_success_millis', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_fail_millis', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('batch_to_send_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('node_priority', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('node_id', 'queue', 'communication_type', name='sym_node_communication_pkey')
    )
    op.create_table('sym_trigger_router',
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('initial_load_order', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('initial_load_select', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('initial_load_delete_stmt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ping_back_enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['router_id'], ['sym_router.router_id'], name='sym_fk_tr_2_rtr'),
    sa.ForeignKeyConstraint(['trigger_id'], ['sym_trigger.trigger_id'], name='sym_fk_tr_2_trg'),
    sa.PrimaryKeyConstraint('trigger_id', 'router_id', name='sym_trigger_router_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('sym_file_trigger_router',
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('initial_load_enabled', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('target_base_dir', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('conflict_strategy', sa.VARCHAR(length=128), server_default=sa.text("'source_wins'::character varying"), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['router_id'], ['sym_router.router_id'], name='sym_fk_ftr_2_rtr'),
    sa.ForeignKeyConstraint(['trigger_id'], ['sym_file_trigger.trigger_id'], name='sym_fk_ftr_2_ftrg'),
    sa.PrimaryKeyConstraint('trigger_id', 'router_id', name='sym_file_trigger_router_pkey')
    )
    op.create_table('sym_outgoing_batch',
    sa.Column('batch_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('status', sa.CHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('error_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('sql_state', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('sql_code', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('sql_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_update_hostname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ignore_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('byte_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('extract_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('sent_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('reload_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('other_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_insert_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_update_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('data_delete_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_insert_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_update_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_delete_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_insert_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_update_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_delete_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('network_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('filter_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('router_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('transform_extract_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('transform_load_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('load_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('common_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('fallback_insert_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('fallback_update_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('ignore_row_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('missing_delete_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('skip_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('total_extract_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('total_load_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('extract_job_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('extract_start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('transfer_start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('load_start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('failed_data_id', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('failed_line_number', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('create_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('batch_id', 'node_id', name='sym_outgoing_batch_pkey')
    )
    op.create_index('sym_idx_ob_status', 'sym_outgoing_batch', ['status'], unique=False)
    op.create_index('sym_idx_ob_node_status', 'sym_outgoing_batch', ['node_id', 'status'], unique=False)
    op.create_index('sym_idx_ob_in_error', 'sym_outgoing_batch', ['error_flag'], unique=False)
    op.create_table('sym_incoming_error',
    sa.Column('batch_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('failed_row_number', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('failed_line_number', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('target_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.CHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('binary_encoding', sa.VARCHAR(length=10), server_default=sa.text("'HEX'::character varying"), autoincrement=False, nullable=False),
    sa.Column('column_names', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('pk_column_names', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('row_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('old_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cur_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resolve_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resolve_ignore', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('conflict_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('batch_id', 'node_id', 'failed_row_number', name='sym_incoming_error_pkey')
    )
    op.create_table('sym_table_reload_request',
    sa.Column('target_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('source_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('create_table', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('delete_first', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('reload_select', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('before_custom_sql', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reload_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('load_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('processed', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('target_node_id', 'source_node_id', 'trigger_id', 'router_id', 'create_time', name='sym_table_reload_request_pkey')
    )
    op.create_table('sym_job',
    sa.Column('job_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('job_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('requires_registration', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('job_expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('default_schedule', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('default_auto_start', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('create_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('job_name', name='sym_job_pkey')
    )
    op.create_table('sym_node_group',
    sa.Column('node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('node_group_id', name='sym_node_group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('sym_node_host',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('host_name', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('instance_id', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('os_user', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('os_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('os_arch', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('os_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('available_processors', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('free_memory_bytes', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_memory_bytes', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('max_memory_bytes', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('java_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('java_vendor', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('jdbc_version', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('symmetric_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('timezone_offset', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('heartbeat_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_restart_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('node_id', 'host_name', name='sym_node_host_pkey')
    )
    op.create_table('sym_transform_table',
    sa.Column('transform_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('source_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('transform_point', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('source_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('source_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('source_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('target_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('update_first', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('update_action', sa.VARCHAR(length=255), server_default=sa.text("'UPDATE_COL'::character varying"), autoincrement=False, nullable=False),
    sa.Column('delete_action', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('transform_order', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('column_policy', sa.VARCHAR(length=10), server_default=sa.text("'SPECIFIED'::character varying"), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['source_node_group_id', 'target_node_group_id'], ['sym_node_group_link.source_node_group_id', 'sym_node_group_link.target_node_group_id'], name='sym_fk_tt_2_grp_lnk'),
    sa.PrimaryKeyConstraint('transform_id', 'source_node_group_id', 'target_node_group_id', name='sym_transform_table_pkey')
    )
    op.create_table('sym_data_event',
    sa.Column('data_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('batch_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('data_id', 'batch_id', 'router_id', name='sym_data_event_pkey')
    )
    op.create_index('sym_idx_de_batchid', 'sym_data_event', ['batch_id'], unique=False)
    op.create_table('sym_monitor_event',
    sa.Column('monitor_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('event_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('host_name', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('threshold', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('event_value', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('event_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('severity_level', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('is_resolved', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('is_notified', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('monitor_id', 'node_id', 'event_time', name='sym_monitor_event_pkey')
    )
    op.create_table('sym_file_snapshot',
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('relative_dir', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), server_default=sa.text("'filesync'::character varying"), autoincrement=False, nullable=False),
    sa.Column('reload_channel_id', sa.VARCHAR(length=128), server_default=sa.text("'filesync_reload'::character varying"), autoincrement=False, nullable=False),
    sa.Column('last_event_type', sa.CHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('crc32_checksum', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('file_modified_time', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('trigger_id', 'router_id', 'relative_dir', 'file_name', name='sym_file_snapshot_pkey')
    )
    op.create_index('sym_idx_f_snpsht_chid', 'sym_file_snapshot', ['reload_channel_id'], unique=False)
    op.create_table('sym_sequence',
    sa.Column('sequence_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('current_value', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('increment_by', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('min_value', sa.BIGINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('max_value', sa.BIGINT(), server_default=sa.text("'9999999999'::bigint"), autoincrement=False, nullable=False),
    sa.Column('cycle_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('cache_size', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('sequence_name', name='sym_sequence_pkey')
    )
    op.create_table('sym_notification',
    sa.Column('notification_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('node_group_id', sa.VARCHAR(length=50), server_default=sa.text("'ALL'::character varying"), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=255), server_default=sa.text("'ALL'::character varying"), autoincrement=False, nullable=False),
    sa.Column('severity_level', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('notification_id', name='sym_notification_pkey')
    )
    op.create_table('sym_extension',
    sa.Column('extension_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('extension_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('interface_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('extension_order', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('extension_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('extension_id', name='sym_extension_pkey')
    )
    op.create_table('sym_conflict',
    sa.Column('conflict_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('source_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('target_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('detect_type', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('detect_expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resolve_type', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('ping_back', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('resolve_changes_only', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('resolve_row_only', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['source_node_group_id', 'target_node_group_id'], ['sym_node_group_link.source_node_group_id', 'sym_node_group_link.target_node_group_id'], name='sym_fk_cf_2_grp_lnk'),
    sa.PrimaryKeyConstraint('conflict_id', name='sym_conflict_pkey')
    )
    op.create_table('sym_registration_redirect',
    sa.Column('registrant_external_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('registration_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('registrant_external_id', name='sym_registration_redirect_pkey')
    )
    op.create_table('sym_context',
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('context_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('name', name='sym_context_pkey')
    )
    op.create_table('sym_grouplet_link',
    sa.Column('grouplet_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['grouplet_id'], ['sym_grouplet.grouplet_id'], name='sym_fk_gpltlnk_2_gplt'),
    sa.PrimaryKeyConstraint('grouplet_id', 'external_id', name='sym_grouplet_link_pkey')
    )
    op.create_table('sym_node_identity',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['sym_node.node_id'], name='sym_fk_ident_2_node'),
    sa.PrimaryKeyConstraint('node_id', name='sym_node_identity_pkey')
    )
    op.create_table('sym_router',
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('source_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('router_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('router_expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sync_on_update', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_insert', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_delete', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('use_source_catalog_schema', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['source_node_group_id', 'target_node_group_id'], ['sym_node_group_link.source_node_group_id', 'sym_node_group_link.target_node_group_id'], name='sym_fk_rt_2_grp_lnk'),
    sa.PrimaryKeyConstraint('router_id', name='sym_router_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('sym_data_gap',
    sa.Column('start_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.CHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_hostname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('start_id', 'end_id', name='sym_data_gap_pkey')
    )
    op.create_index('sym_idx_dg_status', 'sym_data_gap', ['status'], unique=False)
    op.create_table('sym_node_host_channel_stats',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('host_name', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('data_routed', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_unrouted', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_event_inserted', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_extracted', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_bytes_extracted', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_extracted_errors', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_bytes_sent', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_sent', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_sent_errors', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_loaded', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_bytes_loaded', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('data_loaded_errors', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('node_id', 'host_name', 'channel_id', 'start_time', 'end_time', name='sym_node_host_channel_stats_pkey')
    )
    op.create_index('sym_idx_nd_hst_chnl_sts', 'sym_node_host_channel_stats', ['node_id', 'start_time', 'end_time'], unique=False)
    op.create_table('sym_node_channel_ctl',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('suspend_enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('ignore_enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('last_extract_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('node_id', 'channel_id', name='sym_node_channel_ctl_pkey')
    )
    op.create_table('sym_node_security',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('node_password', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('registration_enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('registration_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('initial_load_enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('initial_load_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('initial_load_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('initial_load_create_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('rev_initial_load_enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('rev_initial_load_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('rev_initial_load_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('rev_initial_load_create_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['sym_node.node_id'], name='sym_fk_sec_2_node'),
    sa.PrimaryKeyConstraint('node_id', name='sym_node_security_pkey')
    )
    op.create_table('sym_transform_column',
    sa.Column('transform_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('include_on', sa.CHAR(length=1), server_default=sa.text("'*'::bpchar"), autoincrement=False, nullable=False),
    sa.Column('target_column_name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('source_column_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('pk', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('transform_type', sa.VARCHAR(length=50), server_default=sa.text("'copy'::character varying"), autoincrement=False, nullable=True),
    sa.Column('transform_expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('transform_order', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('transform_id', 'include_on', 'target_column_name', name='sym_transform_column_pkey')
    )
    op.create_table('sym_file_incoming',
    sa.Column('relative_dir', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_event_type', sa.CHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('file_modified_time', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('relative_dir', 'file_name', name='sym_file_incoming_pkey')
    )
    op.create_table('sym_registration_request',
    sa.Column('node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.CHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('host_name', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('attempt_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('registered_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('node_group_id', 'external_id', 'create_time', name='sym_registration_request_pkey')
    )
    op.create_index('sym_idx_reg_req_2', 'sym_registration_request', ['status'], unique=False)
    op.create_index('sym_idx_reg_req_1', 'sym_registration_request', ['node_group_id', 'external_id', 'status', 'host_name', 'ip_address'], unique=False)
    op.create_table('sym_trigger_router_grouplet',
    sa.Column('grouplet_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('applies_when', sa.CHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['grouplet_id'], ['sym_grouplet.grouplet_id'], name='sym_fk_trgplt_2_gplt'),
    sa.ForeignKeyConstraint(['trigger_id', 'router_id'], ['sym_trigger_router.trigger_id', 'sym_trigger_router.router_id'], name='sym_fk_trgplt_2_tr'),
    sa.PrimaryKeyConstraint('grouplet_id', 'trigger_id', 'router_id', 'applies_when', name='sym_trigger_router_grouplet_pkey')
    )
    op.create_table('sym_load_filter',
    sa.Column('load_filter_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('load_filter_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('source_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('target_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('filter_on_update', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('filter_on_insert', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('filter_on_delete', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('before_write_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('after_write_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('batch_complete_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('batch_commit_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('batch_rollback_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('handle_error_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('load_filter_order', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('fail_on_error', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('load_filter_id', name='sym_load_filter_pkey')
    )
    op.create_table('sym_trigger',
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('source_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('source_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('source_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('reload_channel_id', sa.VARCHAR(length=128), server_default=sa.text("'reload'::character varying"), autoincrement=False, nullable=False),
    sa.Column('sync_on_update', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_insert', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_delete', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_incoming_batch', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('name_for_update_trigger', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name_for_insert_trigger', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name_for_delete_trigger', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sync_on_update_condition', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sync_on_insert_condition', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sync_on_delete_condition', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_before_update_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_before_insert_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_before_delete_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_on_update_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_on_insert_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_on_delete_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('external_select', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tx_id_expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('channel_expression', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('excluded_column_names', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('included_column_names', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sync_key_names', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('use_stream_lobs', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('use_capture_lobs', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('use_capture_old_data', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('use_handle_key_updates', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('stream_row', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['sym_channel.channel_id'], name='sym_fk_trg_2_chnl'),
    sa.ForeignKeyConstraint(['reload_channel_id'], ['sym_channel.channel_id'], name='sym_fk_trg_2_rld_chnl'),
    sa.PrimaryKeyConstraint('trigger_id', name='sym_trigger_pkey')
    )
    op.create_table('sym_channel',
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('processing_order', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('max_batch_size', sa.INTEGER(), server_default=sa.text('1000'), autoincrement=False, nullable=False),
    sa.Column('max_batch_to_send', sa.INTEGER(), server_default=sa.text('60'), autoincrement=False, nullable=False),
    sa.Column('max_data_to_route', sa.INTEGER(), server_default=sa.text('100000'), autoincrement=False, nullable=False),
    sa.Column('extract_period_millis', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('use_old_data_to_route', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('use_row_data_to_route', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('use_pk_data_to_route', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('reload_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('file_sync_flag', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('contains_big_lob', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('batch_algorithm', sa.VARCHAR(length=50), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=False),
    sa.Column('data_loader_type', sa.VARCHAR(length=50), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=25), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=False),
    sa.Column('max_network_kbps', sa.NUMERIC(precision=10, scale=3), server_default=sa.text('0.000'), autoincrement=False, nullable=False),
    sa.Column('data_event_action', sa.CHAR(length=1), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('channel_id', name='sym_channel_pkey')
    )
    op.create_table('sym_extract_request',
    sa.Column('request_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('queue', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('status', sa.CHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('start_batch_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_batch_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('router_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('request_id', name='sym_extract_request_pkey')
    )
    op.create_table('sym_node_group_channel_wnd',
    sa.Column('node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('node_group_id', 'channel_id', 'start_time', 'end_time', name='sym_node_group_channel_wnd_pkey')
    )
    op.create_table('sym_node_group_link',
    sa.Column('source_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('data_event_action', sa.CHAR(length=1), server_default=sa.text("'W'::bpchar"), autoincrement=False, nullable=False),
    sa.Column('sync_config_enabled', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('is_reversible', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['source_node_group_id'], ['sym_node_group.node_group_id'], name='sym_fk_lnk_2_grp_src'),
    sa.ForeignKeyConstraint(['target_node_group_id'], ['sym_node_group.node_group_id'], name='sym_fk_lnk_2_grp_tgt'),
    sa.PrimaryKeyConstraint('source_node_group_id', 'target_node_group_id', name='sym_node_group_link_pkey')
    )
    op.create_table('sym_node',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('node_group_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('heartbeat_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('timezone_offset', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('sync_enabled', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('sync_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('schema_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('symmetric_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('config_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('database_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('database_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('batch_to_send_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('batch_in_error_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('created_at_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deployment_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('deployment_sub_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('node_id', name='sym_node_pkey')
    )
    op.create_table('sym_grouplet',
    sa.Column('grouplet_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('grouplet_link_policy', sa.CHAR(length=1), server_default=sa.text("'I'::bpchar"), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('grouplet_id', name='sym_grouplet_pkey')
    )
    op.create_table('sym_node_host_stats',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('host_name', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('restarted', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('nodes_pulled', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_nodes_pull_time', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('nodes_pushed', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('total_nodes_push_time', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('nodes_rejected', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('nodes_registered', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('nodes_loaded', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('nodes_disabled', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('purged_data_rows', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('purged_data_event_rows', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('purged_batch_outgoing_rows', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('purged_batch_incoming_rows', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('triggers_created_count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('triggers_rebuilt_count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('triggers_removed_count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('node_id', 'host_name', 'start_time', 'end_time', name='sym_node_host_stats_pkey')
    )
    op.create_index('sym_idx_nd_hst_sts', 'sym_node_host_stats', ['node_id', 'start_time', 'end_time'], unique=False)
    op.create_table('sym_trigger_hist',
    sa.Column('trigger_hist_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('source_table_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('source_catalog_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('source_schema_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name_for_update_trigger', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name_for_insert_trigger', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('name_for_delete_trigger', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('table_hash', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('trigger_row_hash', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('trigger_template_hash', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('column_names', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('pk_column_names', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('last_trigger_build_reason', sa.CHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('inactive_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('trigger_hist_id', name='sym_trigger_hist_pkey')
    )
    op.create_index('sym_idx_trigg_hist_1', 'sym_trigger_hist', ['trigger_id', 'inactive_time'], unique=False)
    op.create_table('sym_file_trigger',
    sa.Column('trigger_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('channel_id', sa.VARCHAR(length=128), server_default=sa.text("'filesync'::character varying"), autoincrement=False, nullable=False),
    sa.Column('reload_channel_id', sa.VARCHAR(length=128), server_default=sa.text("'filesync_reload'::character varying"), autoincrement=False, nullable=False),
    sa.Column('base_dir', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('recurse', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('includes_files', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('excludes_files', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sync_on_create', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_modified', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_delete', sa.SMALLINT(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('sync_on_ctl_file', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('delete_after_sync', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('before_copy_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('after_copy_script', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_update_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_update_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('trigger_id', name='sym_file_trigger_pkey')
    )
    op.create_table('sym_node_host_job_stats',
    sa.Column('node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('host_name', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('job_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('processed_count', sa.BIGINT(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('target_node_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('target_node_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('node_id', 'host_name', 'job_name', 'start_time', 'end_time', name='sym_node_host_job_stats_pkey')
    )
    op.create_index('sym_idx_nd_hst_job', 'sym_node_host_job_stats', ['node_id', 'start_time', 'end_time'], unique=False)
    # ### end Alembic commands ###
